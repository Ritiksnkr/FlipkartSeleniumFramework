<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="43" passed="18" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-07T12:00:42 IST" name="Suite" finished-at="2022-10-07T12:25:40 IST" duration-ms="1497636">
    <groups>
      <group name="smoke">
        <method signature="LoginPageTest.LoginTest_with_BlankEmail()[pri:4, instance:com.test.LoginPageTest@107ed6fc]" name="LoginTest_with_BlankEmail" class="com.test.LoginPageTest"/>
        <method signature="LoginPageTest.LoginTest_with_BlankPassword()[pri:3, instance:com.test.LoginPageTest@107ed6fc]" name="LoginTest_with_BlankPassword" class="com.test.LoginPageTest"/>
        <method signature="LoginPageTest.LoginTest_with_InValidCredential()[pri:2, instance:com.test.LoginPageTest@107ed6fc]" name="LoginTest_with_InValidCredential" class="com.test.LoginPageTest"/>
        <method signature="LoginPageTest.LoginTest_with_ValidCredential()[pri:1, instance:com.test.LoginPageTest@107ed6fc]" name="LoginTest_with_ValidCredential" class="com.test.LoginPageTest"/>
        <method signature="MyProfileTest.Add_New_Address()[pri:21, instance:com.test.MyProfileTest@274872f8]" name="Add_New_Address" class="com.test.MyProfileTest"/>
        <method signature="MyProfileTest.Delete_Address()[pri:22, instance:com.test.MyProfileTest@274872f8]" name="Delete_Address" class="com.test.MyProfileTest"/>
        <method signature="MyProfileTest.MyProfile_Test()[pri:20, instance:com.test.MyProfileTest@274872f8]" name="MyProfile_Test" class="com.test.MyProfileTest"/>
        <method signature="PaymentTest.ProceedToPayment()[pri:15, instance:com.test.PaymentTest@29ef6856]" name="ProceedToPayment" class="com.test.PaymentTest"/>
        <method signature="SignUpPageTest.CreateAccount()[pri:5, instance:com.test.SignUpPageTest@6d366c9b]" name="CreateAccount" class="com.test.SignUpPageTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="FilterTest.Filter_Test()[pri:17, instance:com.test.FilterTest@3faf2e7d]" name="Filter_Test" class="com.test.FilterTest"/>
        <method signature="FilterTest.Is_Filter_Available()[pri:16, instance:com.test.FilterTest@3faf2e7d]" name="Is_Filter_Available" class="com.test.FilterTest"/>
        <method signature="GroceryTest.Check_Grocery_Section()[pri:18, instance:com.test.GroceryTest@569bf9eb]" name="Check_Grocery_Section" class="com.test.GroceryTest"/>
        <method signature="GroceryTest.GroceryTest()[pri:19, instance:com.test.GroceryTest@569bf9eb]" name="GroceryTest" class="com.test.GroceryTest"/>
        <method signature="HomePageTest.SearchBoxDisplayed()[pri:7, instance:com.test.HomePageTest@3a320ade]" name="SearchBoxDisplayed" class="com.test.HomePageTest"/>
        <method signature="HomePageTest.Verify_Title()[pri:6, instance:com.test.HomePageTest@3a320ade]" name="Verify_Title" class="com.test.HomePageTest"/>
        <method signature="HomePageTest.is_Cart_Displayed()[pri:8, instance:com.test.HomePageTest@3a320ade]" name="is_Cart_Displayed" class="com.test.HomePageTest"/>
        <method signature="HomePageTest.is_Logo_Displayed()[pri:9, instance:com.test.HomePageTest@3a320ade]" name="is_Logo_Displayed" class="com.test.HomePageTest"/>
        <method signature="MyOrdersTest.MyOrders_Test()[pri:23, instance:com.test.MyOrdersTest@76ba13c]" name="MyOrders_Test" class="com.test.MyOrdersTest"/>
        <method signature="PlaceOrderTest.placeOrderTest()[pri:14, instance:com.test.PlaceOrderTest@545de5a4]" name="placeOrderTest" class="com.test.PlaceOrderTest"/>
        <method signature="SearchPageTest.FetchTotalProducts()[pri:11, instance:com.test.SearchPageTest@7813cb11]" name="FetchTotalProducts" class="com.test.SearchPageTest"/>
        <method signature="SearchPageTest.SearchItem()[pri:10, instance:com.test.SearchPageTest@7813cb11]" name="SearchItem" class="com.test.SearchPageTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-10-07T12:00:42 IST" name="Test" finished-at="2022-10-07T12:25:40 IST" duration-ms="1497636">
      <class name="com.test.GroceryTest">
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:18:18 IST" name="Setup" finished-at="2022-10-07T12:19:02 IST" duration-ms="44637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:18:18 IST" name="startTest" finished-at="2022-10-07T12:18:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.GroceryTest.Check_Grocery_Section()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Check_Grocery_Section()[pri:18, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:02 IST" name="Check_Grocery_Section" finished-at="2022-10-07T12:19:02 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Check_Grocery_Section -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:02 IST" name="teardown" finished-at="2022-10-07T12:19:05 IST" duration-ms="2395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:02 IST" name="afterMethod" finished-at="2022-10-07T12:19:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Check_Grocery_Section status=SUCCESS method=GroceryTest.Check_Grocery_Section()[pri:18, instance:com.test.GroceryTest@569bf9eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:05 IST" name="Setup" finished-at="2022-10-07T12:19:51 IST" duration-ms="46532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:05 IST" name="startTest" finished-at="2022-10-07T12:19:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.GroceryTest.GroceryTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="GroceryTest()[pri:19, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:19:51 IST" name="GroceryTest" finished-at="2022-10-07T12:20:15 IST" duration-ms="23543" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="container"]/div/div[3]/div[1]/div[2]/div/div[2]/div/div[1]/div/div/div[1]/div[1]/a/div/div/img"}
  (Session info: chrome=105.0.5195.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [521008b9520a67ad794cf78810e28bf1, findElement {using=xpath, value=//*[@id="container"]/div/div[3]/div[1]/div[2]/div/div[2]/div/div[1]/div/div/div[1]/div[1]/a/div/div/img}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\RITIKS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50200}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50200/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 521008b9520a67ad794cf78810e28bf1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="container"]/div/div[3]/div[1]/div[2]/div/div[2]/div/div[1]/div/div/div[1]/div[1]/a/div/div/img"}
  (Session info: chrome=105.0.5195.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [521008b9520a67ad794cf78810e28bf1, findElement {using=xpath, value=//*[@id="container"]/div/div[3]/div[1]/div[2]/div/div[2]/div/div[1]/div/div/div[1]/div[1]/a/div/div/img}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\RITIKS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50200}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50200/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 521008b9520a67ad794cf78810e28bf1
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy33.click(Unknown Source)
at com.pages.Grocery.SelectItem(Grocery.java:65)
at com.test.GroceryTest.GroceryTest(GroceryTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroceryTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:20:15 IST" name="afterMethod" finished-at="2022-10-07T12:20:15 IST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GroceryTest status=FAILURE method=GroceryTest.GroceryTest()[pri:19, instance:com.test.GroceryTest@569bf9eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.GroceryTest@569bf9eb]" started-at="2022-10-07T12:20:15 IST" name="teardown" finished-at="2022-10-07T12:20:17 IST" duration-ms="2432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.GroceryTest -->
      <class name="com.test.HomePageTest">
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:05:46 IST" name="Setup" finished-at="2022-10-07T12:06:14 IST" duration-ms="27584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:05:46 IST" name="startTest" finished-at="2022-10-07T12:05:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.HomePageTest.Verify_Title()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Verify_Title()[pri:6, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:06:14 IST" name="Verify_Title" finished-at="2022-10-07T12:06:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_Title -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:06:14 IST" name="teardown" finished-at="2022-10-07T12:06:16 IST" duration-ms="2400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:06:14 IST" name="afterMethod" finished-at="2022-10-07T12:06:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verify_Title status=SUCCESS method=HomePageTest.Verify_Title()[pri:6, instance:com.test.HomePageTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:06:16 IST" name="Setup" finished-at="2022-10-07T12:07:14 IST" duration-ms="57935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:06:16 IST" name="startTest" finished-at="2022-10-07T12:06:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.HomePageTest.SearchBoxDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="SearchBoxDisplayed()[pri:7, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:14 IST" name="SearchBoxDisplayed" finished-at="2022-10-07T12:07:14 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchBoxDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:14 IST" name="afterMethod" finished-at="2022-10-07T12:07:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchBoxDisplayed status=SUCCESS method=HomePageTest.SearchBoxDisplayed()[pri:7, instance:com.test.HomePageTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:14 IST" name="teardown" finished-at="2022-10-07T12:07:17 IST" duration-ms="2431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:17 IST" name="startTest" finished-at="2022-10-07T12:07:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.HomePageTest.is_Cart_Displayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:17 IST" name="Setup" finished-at="2022-10-07T12:07:50 IST" duration-ms="33286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="is_Cart_Displayed()[pri:8, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:50 IST" name="is_Cart_Displayed" finished-at="2022-10-07T12:07:50 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- is_Cart_Displayed -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:50 IST" name="teardown" finished-at="2022-10-07T12:07:52 IST" duration-ms="2401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:50 IST" name="afterMethod" finished-at="2022-10-07T12:07:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=is_Cart_Displayed status=SUCCESS method=HomePageTest.is_Cart_Displayed()[pri:8, instance:com.test.HomePageTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:52 IST" name="startTest" finished-at="2022-10-07T12:07:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.HomePageTest.is_Logo_Displayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:07:52 IST" name="Setup" finished-at="2022-10-07T12:08:56 IST" duration-ms="64089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="is_Logo_Displayed()[pri:9, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:08:56 IST" name="is_Logo_Displayed" finished-at="2022-10-07T12:08:56 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- is_Logo_Displayed -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:08:56 IST" name="teardown" finished-at="2022-10-07T12:08:59 IST" duration-ms="2412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTest@3a320ade]" started-at="2022-10-07T12:08:56 IST" name="afterMethod" finished-at="2022-10-07T12:08:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=is_Logo_Displayed status=SUCCESS method=HomePageTest.is_Logo_Displayed()[pri:9, instance:com.test.HomePageTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.HomePageTest -->
      <class name="com.test.PaymentTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.PaymentTest@29ef6856]" started-at="2022-10-07T12:15:04 IST" name="startTest" finished-at="2022-10-07T12:15:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.PaymentTest.ProceedToPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.PaymentTest@29ef6856]" started-at="2022-10-07T12:15:04 IST" name="seTup" finished-at="2022-10-07T12:15:37 IST" duration-ms="32836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method signature="ProceedToPayment()[pri:15, instance:com.test.PaymentTest@29ef6856]" started-at="2022-10-07T12:15:37 IST" name="ProceedToPayment" finished-at="2022-10-07T12:16:03 IST" duration-ms="26429" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [04ba2c901d1723ffe3067ccf3fe1224e, actions {actions=[org.openqa.selenium.interactions.Sequence@2cdb5974]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\RITIKS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:49893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49893/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 04ba2c901d1723ffe3067ccf3fe1224e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [04ba2c901d1723ffe3067ccf3fe1224e, actions {actions=[org.openqa.selenium.interactions.Sequence@2cdb5974]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\RITIKS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:49893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49893/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 04ba2c901d1723ffe3067ccf3fe1224e
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:362)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:68)
at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:259)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:637)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:536)
at com.test.PaymentTest.ProceedToPayment(PaymentTest.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:303)
at org.openqa.selenium.json.Json.toJson(Json.java:40)
... 38 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:358)
... 59 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="injKWYlZkxsqfwg"]"}
  (Session info: chrome=105.0.5195.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'IN-PG02H8SH', ip: '192.168.29.204', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [04ba2c901d1723ffe3067ccf3fe1224e, findElement {using=xpath, value=//*[@id="injKWYlZkxsqfwg"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 105.0.5195.127, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\RITIKS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:49893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49893/devtoo..., se:cdpVersion: 105.0.5195.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 04ba2c901d1723ffe3067ccf3fe1224e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy33.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:260)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:209)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:73)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:82)
... 64 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProceedToPayment -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.PaymentTest@29ef6856]" started-at="2022-10-07T12:16:03 IST" name="afterMethod" finished-at="2022-10-07T12:16:04 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ProceedToPayment status=FAILURE method=PaymentTest.ProceedToPayment()[pri:15, instance:com.test.PaymentTest@29ef6856] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.PaymentTest@29ef6856]" started-at="2022-10-07T12:16:04 IST" name="teardown" finished-at="2022-10-07T12:16:06 IST" duration-ms="2428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.PaymentTest -->
      <class name="com.test.FilterTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:06 IST" name="startTest" finished-at="2022-10-07T12:16:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.FilterTest.Is_Filter_Available() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:06 IST" name="seTup" finished-at="2022-10-07T12:16:30 IST" duration-ms="23711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method signature="Is_Filter_Available()[pri:16, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:30 IST" name="Is_Filter_Available" finished-at="2022-10-07T12:16:41 IST" duration-ms="11362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Is_Filter_Available -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:41 IST" name="afterMethod" finished-at="2022-10-07T12:16:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Is_Filter_Available status=SUCCESS method=FilterTest.Is_Filter_Available()[pri:16, instance:com.test.FilterTest@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:41 IST" name="teardown" finished-at="2022-10-07T12:16:44 IST" duration-ms="2411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:44 IST" name="seTup" finished-at="2022-10-07T12:17:38 IST" duration-ms="54525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:16:44 IST" name="startTest" finished-at="2022-10-07T12:16:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.FilterTest.Filter_Test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="Filter_Test()[pri:17, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:17:38 IST" name="Filter_Test" finished-at="2022-10-07T12:18:15 IST" duration-ms="37208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Filter_Test -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:18:15 IST" name="afterMethod" finished-at="2022-10-07T12:18:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Filter_Test status=SUCCESS method=FilterTest.Filter_Test()[pri:17, instance:com.test.FilterTest@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.FilterTest@3faf2e7d]" started-at="2022-10-07T12:18:15 IST" name="teardown" finished-at="2022-10-07T12:18:18 IST" duration-ms="2399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.FilterTest -->
      <class name="com.test.CartPageTest">
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:25 IST" name="Setup" finished-at="2022-10-07T12:12:44 IST" duration-ms="19750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:25 IST" name="startTest" finished-at="2022-10-07T12:12:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CartPageTest.GotoCart_Test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="GotoCart_Test()[pri:12, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:44 IST" name="GotoCart_Test" finished-at="2022-10-07T12:12:55 IST" duration-ms="10430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GotoCart_Test -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:55 IST" name="teardown" finished-at="2022-10-07T12:12:57 IST" duration-ms="2406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:55 IST" name="afterMethod" finished-at="2022-10-07T12:12:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GotoCart_Test status=SUCCESS method=CartPageTest.GotoCart_Test()[pri:12, instance:com.test.CartPageTest@21005f6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:57 IST" name="startTest" finished-at="2022-10-07T12:12:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.CartPageTest.AddToCart() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:12:57 IST" name="Setup" finished-at="2022-10-07T12:13:42 IST" duration-ms="44892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="AddToCart()[pri:13, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:13:42 IST" name="AddToCart" finished-at="2022-10-07T12:14:06 IST" duration-ms="23740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:14:06 IST" name="afterMethod" finished-at="2022-10-07T12:14:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToCart status=SUCCESS method=CartPageTest.AddToCart()[pri:13, instance:com.test.CartPageTest@21005f6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.CartPageTest@21005f6c]" started-at="2022-10-07T12:14:06 IST" name="teardown" finished-at="2022-10-07T12:14:08 IST" duration-ms="2411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.CartPageTest -->
      <class name="com.test.SearchPageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:08:59 IST" name="startTest" finished-at="2022-10-07T12:08:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void com.test.SearchPageTest.SearchItem() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:08:59 IST" name="setUp" finished-at="2022-10-07T12:10:38 IST" duration-ms="99238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SearchItem()[pri:10, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:10:38 IST" name="SearchItem" finished-at="2022-10-07T12:10:49 IST" duration-ms="11253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItem -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:10:49 IST" name="afterMethod" finished-at="2022-10-07T12:10:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItem status=SUCCESS method=SearchPageTest.SearchItem()[pri:10, instance:com.test.SearchPageTest@7813cb11] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:10:49 IST" name="teardown" finished-at="2022-10-07T12:10:52 IST" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:10:52 IST" name="startTest" finished-at="2022-10-07T12:10:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.SearchPageTest.FetchTotalProducts() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:10:52 IST" name="setUp" finished-at="2022-10-07T12:12:15 IST" duration-ms="83278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="FetchTotalProducts()[pri:11, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:12:15 IST" name="FetchTotalProducts" finished-at="2022-10-07T12:12:22 IST" duration-ms="7222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FetchTotalProducts -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:12:22 IST" name="teardown" finished-at="2022-10-07T12:12:25 IST" duration-ms="2400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.SearchPageTest@7813cb11]" started-at="2022-10-07T12:12:22 IST" name="afterMethod" finished-at="2022-10-07T12:12:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FetchTotalProducts status=SUCCESS method=SearchPageTest.FetchTotalProducts()[pri:11, instance:com.test.SearchPageTest@7813cb11] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.SearchPageTest -->
      <class name="com.test.PlaceOrderTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.PlaceOrderTest@545de5a4]" started-at="2022-10-07T12:14:08 IST" name="setUp" finished-at="2022-10-07T12:14:33 IST" duration-ms="24600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.PlaceOrderTest@545de5a4]" started-at="2022-10-07T12:14:08 IST" name="startTest" finished-at="2022-10-07T12:14:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.PlaceOrderTest.placeOrderTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="placeOrderTest()[pri:14, instance:com.test.PlaceOrderTest@545de5a4]" started-at="2022-10-07T12:14:33 IST" name="placeOrderTest" finished-at="2022-10-07T12:15:02 IST" duration-ms="28900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.PlaceOrderTest@545de5a4]" started-at="2022-10-07T12:15:02 IST" name="afterMethod" finished-at="2022-10-07T12:15:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderTest status=SUCCESS method=PlaceOrderTest.placeOrderTest()[pri:14, instance:com.test.PlaceOrderTest@545de5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.PlaceOrderTest@545de5a4]" started-at="2022-10-07T12:15:02 IST" name="teardown" finished-at="2022-10-07T12:15:04 IST" duration-ms="2403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.PlaceOrderTest -->
      <class name="com.test.SignUpPageTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.SignUpPageTest@6d366c9b]" started-at="2022-10-07T12:04:38 IST" name="startTest" finished-at="2022-10-07T12:04:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.SignUpPageTest.CreateAccount() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.SignUpPageTest@6d366c9b]" started-at="2022-10-07T12:04:38 IST" name="setUp" finished-at="2022-10-07T12:05:40 IST" duration-ms="62645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="CreateAccount()[pri:5, instance:com.test.SignUpPageTest@6d366c9b]" started-at="2022-10-07T12:05:40 IST" name="CreateAccount" finished-at="2022-10-07T12:05:44 IST" duration-ms="3326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateAccount -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.SignUpPageTest@6d366c9b]" started-at="2022-10-07T12:05:44 IST" name="afterMethod" finished-at="2022-10-07T12:05:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateAccount status=SUCCESS method=SignUpPageTest.CreateAccount()[pri:5, instance:com.test.SignUpPageTest@6d366c9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.SignUpPageTest@6d366c9b]" started-at="2022-10-07T12:05:44 IST" name="teardown" finished-at="2022-10-07T12:05:46 IST" duration-ms="2415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.SignUpPageTest -->
      <class name="com.test.MyProfileTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:20:17 IST" name="startTest" finished-at="2022-10-07T12:20:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.MyProfileTest.MyProfile_Test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:20:17 IST" name="seTup" finished-at="2022-10-07T12:20:54 IST" duration-ms="37117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method signature="MyProfile_Test()[pri:20, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:20:54 IST" name="MyProfile_Test" finished-at="2022-10-07T12:21:09 IST" duration-ms="14586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MyProfile_Test -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:21:09 IST" name="teardown" finished-at="2022-10-07T12:21:11 IST" duration-ms="2415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:21:09 IST" name="afterMethod" finished-at="2022-10-07T12:21:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MyProfile_Test status=SUCCESS method=MyProfileTest.MyProfile_Test()[pri:20, instance:com.test.MyProfileTest@274872f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:21:11 IST" name="startTest" finished-at="2022-10-07T12:21:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.MyProfileTest.Add_New_Address() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:21:11 IST" name="seTup" finished-at="2022-10-07T12:22:43 IST" duration-ms="91897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method signature="Add_New_Address()[pri:21, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:22:43 IST" name="Add_New_Address" finished-at="2022-10-07T12:23:17 IST" duration-ms="33890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_New_Address -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:23:17 IST" name="teardown" finished-at="2022-10-07T12:23:20 IST" duration-ms="2412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:23:17 IST" name="afterMethod" finished-at="2022-10-07T12:23:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Add_New_Address status=SUCCESS method=MyProfileTest.Add_New_Address()[pri:21, instance:com.test.MyProfileTest@274872f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:23:20 IST" name="startTest" finished-at="2022-10-07T12:23:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.MyProfileTest.Delete_Address() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:23:20 IST" name="seTup" finished-at="2022-10-07T12:23:47 IST" duration-ms="27194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method signature="Delete_Address()[pri:22, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:23:47 IST" name="Delete_Address" finished-at="2022-10-07T12:24:13 IST" duration-ms="26151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Delete_Address -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:24:13 IST" name="afterMethod" finished-at="2022-10-07T12:24:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Delete_Address status=SUCCESS method=MyProfileTest.Delete_Address()[pri:22, instance:com.test.MyProfileTest@274872f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.MyProfileTest@274872f8]" started-at="2022-10-07T12:24:13 IST" name="teardown" finished-at="2022-10-07T12:24:15 IST" duration-ms="2433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.test.MyProfileTest -->
      <class name="com.test.LoginPageTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:00:42 IST" name="init" finished-at="2022-10-07T12:00:42 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:00:42 IST" name="startTest" finished-at="2022-10-07T12:00:42 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.LoginPageTest.LoginTest_with_ValidCredential() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:00:42 IST" name="setUp" finished-at="2022-10-07T12:01:31 IST" duration-ms="48539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="LoginTest_with_ValidCredential()[pri:1, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:01:31 IST" name="LoginTest_with_ValidCredential" finished-at="2022-10-07T12:01:37 IST" duration-ms="6018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest_with_ValidCredential -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:01:37 IST" name="afterMethod" finished-at="2022-10-07T12:01:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest_with_ValidCredential status=SUCCESS method=LoginPageTest.LoginTest_with_ValidCredential()[pri:1, instance:com.test.LoginPageTest@107ed6fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:01:37 IST" name="teardown" finished-at="2022-10-07T12:01:39 IST" duration-ms="2386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:01:39 IST" name="startTest" finished-at="2022-10-07T12:01:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.LoginPageTest.LoginTest_with_InValidCredential() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:01:39 IST" name="setUp" finished-at="2022-10-07T12:02:40 IST" duration-ms="60570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="LoginTest_with_InValidCredential()[pri:2, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:02:40 IST" name="LoginTest_with_InValidCredential" finished-at="2022-10-07T12:02:45 IST" duration-ms="5335" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Looks like you're new here!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Looks like you're new here!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.test.LoginPageTest.LoginTest_with_InValidCredential(LoginPageTest.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest_with_InValidCredential -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:02:45 IST" name="afterMethod" finished-at="2022-10-07T12:02:45 IST" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest_with_InValidCredential status=FAILURE method=LoginPageTest.LoginTest_with_InValidCredential()[pri:2, instance:com.test.LoginPageTest@107ed6fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:02:45 IST" name="teardown" finished-at="2022-10-07T12:02:48 IST" duration-ms="2391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:02:48 IST" name="setUp" finished-at="2022-10-07T12:03:37 IST" duration-ms="49397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:02:48 IST" name="startTest" finished-at="2022-10-07T12:02:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.LoginPageTest.LoginTest_with_BlankPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="LoginTest_with_BlankPassword()[pri:3, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:03:37 IST" name="LoginTest_with_BlankPassword" finished-at="2022-10-07T12:03:43 IST" duration-ms="5296" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Please enter Password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Please enter Password]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.test.LoginPageTest.LoginTest_with_BlankPassword(LoginPageTest.java:93)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest_with_BlankPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:03:43 IST" name="afterMethod" finished-at="2022-10-07T12:03:43 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest_with_BlankPassword status=FAILURE method=LoginPageTest.LoginTest_with_BlankPassword()[pri:3, instance:com.test.LoginPageTest@107ed6fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:03:43 IST" name="teardown" finished-at="2022-10-07T12:03:45 IST" duration-ms="2423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:03:45 IST" name="setUp" finished-at="2022-10-07T12:04:30 IST" duration-ms="44501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:03:45 IST" name="startTest" finished-at="2022-10-07T12:03:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.LoginPageTest.LoginTest_with_BlankEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="LoginTest_with_BlankEmail()[pri:4, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:04:30 IST" name="LoginTest_with_BlankEmail" finished-at="2022-10-07T12:04:35 IST" duration-ms="5256" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Please enter valid Email ID/Mobile number]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Please enter valid Email ID/Mobile number]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.test.LoginPageTest.LoginTest_with_BlankEmail(LoginPageTest.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest_with_BlankEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:04:35 IST" name="afterMethod" finished-at="2022-10-07T12:04:35 IST" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest_with_BlankEmail status=FAILURE method=LoginPageTest.LoginTest_with_BlankEmail()[pri:4, instance:com.test.LoginPageTest@107ed6fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:04:35 IST" name="teardown" finished-at="2022-10-07T12:04:38 IST" duration-ms="2402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="reportFlush()[pri:0, instance:com.test.LoginPageTest@107ed6fc]" started-at="2022-10-07T12:25:40 IST" name="reportFlush" finished-at="2022-10-07T12:25:40 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- com.test.LoginPageTest -->
      <class name="com.test.MyOrdersTest">
        <test-method is-config="true" signature="seTup()[pri:0, instance:com.test.MyOrdersTest@76ba13c]" started-at="2022-10-07T12:24:15 IST" name="seTup" finished-at="2022-10-07T12:25:13 IST" duration-ms="57053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seTup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.test.MyOrdersTest@76ba13c]" started-at="2022-10-07T12:24:15 IST" name="startTest" finished-at="2022-10-07T12:24:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.MyOrdersTest.MyOrders_Test() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="MyOrders_Test()[pri:23, instance:com.test.MyOrdersTest@76ba13c]" started-at="2022-10-07T12:25:13 IST" name="MyOrders_Test" finished-at="2022-10-07T12:25:37 IST" duration-ms="24892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MyOrders_Test -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.test.MyOrdersTest@76ba13c]" started-at="2022-10-07T12:25:37 IST" name="teardown" finished-at="2022-10-07T12:25:40 IST" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.test.MyOrdersTest@76ba13c]" started-at="2022-10-07T12:25:37 IST" name="afterMethod" finished-at="2022-10-07T12:25:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MyOrders_Test status=SUCCESS method=MyOrdersTest.MyOrders_Test()[pri:23, instance:com.test.MyOrdersTest@76ba13c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.MyOrdersTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
